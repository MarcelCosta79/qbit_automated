#!/bin/bash

source src/qbit_user

qbit_rclone () {
  service="/etc/systemd/system/"
  if [ ${enableCourses} = "on" ]; then
    serviceNames="${service}${moviesRemote}.service ${service}${tvRemote}.service ${service}${epsRemote}.service ${service}${courseRemote}.service"
  else
    serviceNames="${service}${moviesRemote}.service ${service}${tvRemote}.service ${service}${epsRemote}.service"
  fi
  for remotes in ${serviceNames}; do
    sudo echo "[Unit]"                                                                           >  ${remotes}
    sudo echo "Description=Rclone mount "                                                        >> ${remotes}
    sudo echo "AssertPathIsDirectory=PATH"                                                       >> ${remotes}
    sudo echo "After=network-online.target"                                                      >> ${remotes}
    sudo echo ""                                                                                 >> ${remotes}
    sudo echo "[Service]"                                                                        >> ${remotes}
    sudo echo "Type=simple"                                                                      >> ${remotes}
    sudo echo "ExecStart=/usr/bin/rclone mount \\"                                               >> ${remotes}
    sudo echo "    --umask 0 \\"                                                                 >> ${remotes}
    sudo echo "    --allow-other \\"                                                             >> ${remotes}
    sudo echo "    --tpslimit 10 \\"                                                             >> ${remotes}
    sudo echo "    --tpslimit-burst 10 \\"                                                       >> ${remotes}
    sudo echo "    --transfers 3 \\"                                                             >> ${remotes}
    sudo echo "    --checkers 6 \\"                                                              >> ${remotes}
    sudo echo "    --config ${rcloneFilesDir}/config/rclone.conf \\"                             >> ${remotes}
    sudo echo "    --dir-cache-time 672h \\"                                                     >> ${remotes}
    sudo echo "    --vfs-cache-mode full \\"                                                     >> ${remotes}
    sudo echo "    --vfs-cache-max-size CACHE \\"                                                >> ${remotes}
    sudo echo "    --vfs-cache-max-age 675h \\"                                                  >> ${remotes}
    sudo echo "    --vfs-read-chunk-size 4M \\"                                                  >> ${remotes}
    sudo echo "    --vfs-read-chunk-size-limit 16M \\"                                           >> ${remotes}
    sudo echo "    --drive-chunk-size 256M \\"                                                   >> ${remotes}
    sudo echo "    --drive-stop-on-upload-limit \\"                                              >> ${remotes}
    sudo echo "    --buffer-size 4M \\"                                                          >> ${remotes}
    sudo echo "    --poll-interval 60s \\"                                                       >> ${remotes}
    sudo echo "    --cache-dir ${cacheDir} \\"                                                   >> ${remotes}
    sudo echo "    --log-file ${rcloneFilesDir}/logs/REMOTE \\"                                  >> ${remotes}
    sudo echo "    --log-level INFO \\"                                                          >> ${remotes}
    sudo echo "    REMOTE: PATH"                                                                 >> ${remotes}
    sudo echo "ExecStop=/bin/fusermount -u PATH"                                                 >> ${remotes}
    sudo echo "Restart=on-failure"                                                               >> ${remotes}
    sudo echo "RestartSec=10"                                                                    >> ${remotes}
    sudo echo ""                                                                                 >> ${remotes}
    sudo echo "[Install]"                                                                        >> ${remotes}
    sudo echo "WantedBy=default.target"                                                          >> ${remotes}
  done

  # Edita os serviços
  if [ ${enableCourses} = "on" ]; then
    sudo sed -i "s|PATH|${coursePath}|g; s|CACHE|${cacheCourses}|g; s|REMOTE|${courseRemote}|g"  ${service}${courseRemote}.service
  fi
  sudo sed -i "s|PATH|${moviesPath}|g; s|CACHE|${cacheMovie}|g; s|REMOTE|${moviesRemote}|g"      ${service}${moviesRemote}.service
  sudo sed -i "s|PATH|${tvPath}|g; s|CACHE|${cacheTv}|g; s|REMOTE|${tvRemote}|g"                 ${service}${tvRemote}.service
  sudo sed -i "s|PATH|${epsPath}|g; s|CACHE|${cacheEps}|g; s|REMOTE|${epsRemote}|g"              ${service}${epsRemote}.service
  sudo systemctl daemon-reload

  # Cria pastas necessarias
  mkdir -p ${rcloneFilesDir}
  mkdir -p ${rcloneFilesDir}/logs

  # Verifica e cria as pasta do rclone.
  if [ ${enableCourses} = "on" ]; then
    pathRcloneCheck="${moviesPath} ${tvPath} ${epsPath} ${coursePath}"
  else
    pathRcloneCheck="${moviesPath} ${tvPath} ${epsPath}"
  fi
  for value in ${pathRcloneCheck}; do
    if [ ! -d "${value}" ]; then
      mkdir -p ${value}
    fi
  done

  # Inicia os serviços
  if [ ${rcloneDownloadConfig} = "on" ]; then
    sudo systemctl enable ${moviesRemote}.service
    sudo systemctl enable ${tvRemote}.service
    sudo systemctl enable ${epsRemote}.service
    sudo systemctl start ${moviesRemote}.service
    sudo systemctl start ${tvRemote}.service
    sudo systemctl start ${epsRemote}.service
    if [ ${enableCourses} = "on" ]; then
      sudo systemctl enable ${courseRemote}.service
      sudo systemctl start ${courseRemote}.service
    fi
  else
    sudo systemctl enable ${moviesRemote}.service
    sudo systemctl enable ${tvRemote}.service
    sudo systemctl enable ${epsRemote}.service
    if [ ${enableCourses} = "on" ]; then
      sudo systemctl enable ${courseRemote}.service
    fi
  fi

  # Verifica se o mount está correto
  if [ ${rcloneDownloadConfig} = "on" ]; then
    touch ${PWD}/check
    rclone copy ${PWD}/check ${moviesRemote}: --config ${rcloneFilesDir}/config/rclone.conf
    sudo systemctl restart ${moviesRemote}.service
    echo "$(tput civis)"
    printf "\n\n\n"
    echo "Verificando mount, aguarde"
  while ! test -f "${moviesPath}/check"; do
    printf "."
    sleep 2
  done
    rm ${moviesPath}/check
    rm ${PWD}/check
  fi
  echo "$(tput cnorm)"

  # Cria pasta dos anos em $moviesPath
  if [ ${rcloneDownloadConfig} = "on" ]; then
    folder=1960
    while [ $folder -le 2021 ]; do
      if [ ! -d "$moviesPath/$folder" ]; then
        mkdir $moviesPath/$folder
        sleep 0.2
      fi
      folder=$(( $folder + 1 ))
    done
  fi
}