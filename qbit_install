#!/bin/bash

source src/qbit_user
source src/qbit_service
source src/qbit_rclone
source src/qbit_rss
source src/qbit_rules
source src/qbit_conf

# Instala dependencias
apt install unzip -y; apt install zip -y;
add-apt-repository ppa:qbittorrent-team/qbittorrent-stable -y
apt install qbittorrent-nox -y
curl https://rclone.org/install.sh | sudo bash
mkdir -p /home/$USER

# Inicia script personalizado
qbit_onStart

# Configura e monta remotes do rclone
qbit_rclone

# Configura service do qBittorrent
qbit_service

# Cria pastas necessárias
mkdir -p /home/$USER/qBittorrent/downloads/
mkdir -p /home/$USER/qBittorrent/files/
mkdir -p /home/$USER/qBittorrent/files_incomplete/
mkdir -p /home/$USER/qBittorrent/config/
mkdir -p /home/$USER/qBittorrent/config/rss/

if [ ${autoTorrents} = "on" ]; then
  # Download dos arquivos .torrent
  cd /home/$USER/qBittorrent/files/
  rclone copy ${filesRemote}:torrents_latest.zip ${PWD} --config ${rcloneFilesDir}/config/rclone.conf
  unzip torrents_latest.zip
  rm torrents_latest.zip

  if [ ${crontabEnable} = "on" ]; then
    # Cria symlinks
    ln -s $moviesPath$cronMovies /home/$USER/qBittorrent/downloads/
    ln -s $tvPath$cronTv /home/$USER/qBittorrent/downloads/
    ln -s $epsPath$cronEps /home/$USER/qBittorrent/downloads/
  fi
fi

# Zipar e salvar os .torrents na nuvem.
if [ ${torrentsFileEnable} = "on" ]; then
  echo "cd /home/$USER/qBittorrent/files/"                                                                                                            >  /usr/bin/uploadFiles
  echo "zip -r torrents_latest.zip *"                                                                                                                 >> /usr/bin/uploadFiles
  echo "rclone moveto ${filesRemote}:torrents_latest.zip ${filesRemote}:$(date +\"%d-%m-%Y\").zip --config ${rcloneFilesDir}/config/rclone.conf"      >> /usr/bin/uploadFiles
  echo "rclone move torrents_latest.zip ${filesRemote}: --config ${rcloneFilesDir}/config/rclone.conf"                                                >> /usr/bin/uploadFiles
  echo "rm torrents_latest.zip"                                                                                                                       >> /usr/bin/uploadFiles
  echo "0 * * * * /usr/bin/uploadFiles >/dev/null 2>&1"                                                                                               >> /var/spool/cron/crontabs/root
  chmod a+x /usr/bin/uploadFiles
fi

# Adiciona conf do script
qbit_conf

# Download da WebUI
# if [ $webUI = "on" ]; then
#   git clone --single-branch --branch latest-release https://github.com/WDaan/VueTorrent.git /home/$USER/qBittorrent/config/webUI/VueTorrent/
# fi

# Se ativado, adiciona regras e RSS
qbit_rss
qbit_rules

# Inicia qBittorrent
qbittorrent-nox -d --profile=/home/$USER --webui-port=${portWeb} --skip-hash-check --save-path=/home/$USER/qBittorrent/downloads/ ${torrentsFileLocal}/*.torrent

# Service qBittorrent
systemctl enable qbittorrent-${portWeb}.service

# Inicia script personalizado
qbit_onEnd

if [ $rcloneDownloadConfig = "on" ]; then
  printf "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
  printf "Instalação concluída.\n\n$(tput setaf 7)"
  printf "Acesse: $(tput setaf 6)http://${ip}:${portWeb}/$(tput setaf 7)\n"
  printf "Usuário: $(tput setaf 6)admin$(tput setaf 7)\n"
  printf "Senha: $(tput setaf 6)adminadmin$(tput setaf 7)\n\n"
else
  printf "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
  printf "Instalação concluída.\n\n$(tput setaf 7)"
  printf "Acesse: $(tput setaf 6)http://${ip}:${portWeb}/$(tput setaf 7)\n"
  printf "Usuário: $(tput setaf 6)pirata$(tput setaf 7)\n"
  printf "Senha: $(tput setaf 6)adminadmin$(tput setaf 7)\n\n"
  printf "Você não adicionou sua config do rclone\nno script, portanto devera fazer isso agora.\n"
  printf "Execute o comando: $(tput setaf 6)rclone config --config /home/rclone/rclone.conf$(tput setaf 7)\n\n"
  printf "Conforme definido no script, você precisa criar os remotes;\n\n"
  printf "    $(tput setaf 6)$moviesRemote$(tput setaf 7) para os filmes.\n"
  printf "    $(tput setaf 6)$tvRemote$(tput setaf 7) para as séries\n"
  printf "    $(tput setaf 6)$epsRemote$(tput setaf 7) para os episódios avulsos.\n"
  if [ $torrentsFileEnable = "on" ]; then
    printf "    $(tput setaf 6)$filesRemote$(tput setaf 7) para os arquivos .torrent.\n\n"
  fi
  printf "Após ter configurado\nexecute o comando: $(tput setaf 6)sudo systemctl start {tv.service,movie.service,eps.service}$(tput setaf 7)\n\n\n"
fi